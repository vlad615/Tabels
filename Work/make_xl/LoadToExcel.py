from re import search, findall
from random import choice
from pars_tg import CopyContent
from UrlPhoto import asc_url
from avitodata import set_id, set_address
import pandas as pd
from json import load
import asyncio
from os import getcwd, scandir, remove
import uvloop

"""
    class LoadData
        –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞—Ä—Å–µ—Ä —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É.
    
    –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞:
        choose - –∏–º—è —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–∞: straight tables, comp armchair, cabinet, closet, director office, corner tables,
            chairs.
        count_mass - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ,–∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –≤–æ–π—Ç–∏ –≤ –ø–∞—Ä—Å–∏–Ω–≥
"""


class LoadData:
    _channels = {"straight tables": -1001166492970,
                 "comp armchair": -1001198770422,
                 "cabinet": -1001216807024,
                 "closet": -1001390310467,
                 "director office": -1001479107169,
                 "corner tables": -1001492485587,
                 "chairs": -1001430077633}
    __cwd = getcwd()
    main_text = ["""–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –º–µ–±–µ–ª—å –ø–æ–¥ –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –Ω—É–∂–¥—ã –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º---->
    üî• –°–∏—Å—Ç–µ–º–∞ –±–æ–ª—å—à–∏—Ö —Å–∫–∏–¥–æ–∫ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø—Ä–∏ –æ–ø—Ç–µ –∏ –≤ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏ 
    ‚úî –°–∞–º–æ–≤—ã–≤–æ–∑
    ‚úî–û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∏–ª–∏ –±–µ–∑–Ω–∞–ª. –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É. –°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π. 
    ‚ûï –ê–¥—Ä–µ—Å: –°–∫–ª–∞–¥ –≤ –≥. –û–¥–∏–Ω—Ü–æ–≤–æ —É–ª–∏—Ü–∞ –°—Ç–∞—Ä–æ–µ –Ø—Å–∫–∏–Ω–æ 75—Å—Ç2. –û—Ä–∏–µ–Ω—Ç–∏—Ä –≤–æ—Ä–æ—Ç–∞ —Å –≤—ã–≤–µ—Å–∫–æ–π –û—Ñ–∏—Å –ö–æ–º—Ñ–æ—Ä—Ç
    ‚ûï –ü—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–∞—Å –≤ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–µ –Ω–∞–±–µ—Ä–∏—Ç–µ ‚Äì 
    –û—Ñ–∏—Å –∫–æ–º—Ñ–æ—Ä—Ç –û–¥–∏–Ω—Ü–æ–≤–æ 
    ‚ûï –ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª ‚Äì office comfort es
    üïí –ì—Ä–∞—Ñ–∏–∫: –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Å–∫–ª–∞–¥–∞ —Å 10 –¥–æ 19, –í—ã—Ö–æ–¥–Ω–æ–π –í—Å. 
    -------------------------------------------------------------------
    O—Ñ–∏—Å –ö–æ–º—Ñ–æ—Ä—Ç ‚Äî —ç—Ç–æ –±–æ–ª—å—à–æ–π —Å–∫–ª–∞–¥ –æ—Ñ–∏—Å–Ω–æ–π –º–µ–±–µ–ª–∏, –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –±–æ–ª—å—à–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –≤ –≥–æ—Ä–æ–¥–µ –û–¥–∏–Ω—Ü–æ–≤–æ –ú.–û.
    –ù–∞ –Ω–∞—à–µ–º —Å–∫–ª–∞–¥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –º–µ–±–µ–ª—å –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å. –£ –º–Ω–æ–≥–æ –∫–∞–∫ –¥–µ—à–µ–≤–æ–π –±—É –º–µ–±–µ–ª–∏, —Ç–∞–∫ –∏ –º–µ–±–µ–ª—å –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞. 
    –†–∞–±–æ—Ç–∞–µ–º —É–∂–µ 6 –ª–µ—Ç, —Ä–∞–∑–≤–∏–≤–∞—è—Å—å –∏ —É–ª—É—á—à–∞—è —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä
    –ú–æ–∂–µ–º —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞—Ç—å 100-200 —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç.
    """, """–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –º–µ–±–µ–ª—å –ø–æ–¥ –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ –Ω—É–∂–¥—ã –Ω–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º---->
                 ‚ûï –ê–¥—Ä–µ—Å: –°–∫–ª–∞–¥ –≤ –≥. –û–¥–∏–Ω—Ü–æ–≤–æ —É–ª–∏—Ü–∞ –°—Ç–∞—Ä–æ–µ –Ø—Å–∫–∏–Ω–æ 75—Å—Ç2. –û—Ä–∏–µ–Ω—Ç–∏—Ä –≤–æ—Ä–æ—Ç–∞ —Å –≤—ã–≤–µ—Å–∫–æ–π –û—Ñ–∏—Å –ö–æ–º—Ñ–æ—Ä—Ç
                 ‚ûï –ü—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–∞—Å –≤ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–µ –Ω–∞–±–µ—Ä–∏—Ç–µ ‚Äì 
                 –û—Ñ–∏—Å –∫–æ–º—Ñ–æ—Ä—Ç –û–¥–∏–Ω—Ü–æ–≤–æ 
                 ‚ûï –ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª ‚Äì office comfort es
                 üïí –ì—Ä–∞—Ñ–∏–∫: –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã —Å–∫–ª–∞–¥–∞ —Å 10 –¥–æ 19, –í—ã—Ö–æ–¥–Ω–æ–π –í—Å. 
                 -------------------------------------------------------------------
                 O—Ñ–∏—Å –ö–æ–º—Ñ–æ—Ä—Ç ‚Äî —ç—Ç–æ –±–æ–ª—å—à–æ–π —Å–∫–ª–∞–¥ –æ—Ñ–∏—Å–Ω–æ–π –º–µ–±–µ–ª–∏, –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è –±–æ–ª—å—à–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –≤ –≥–æ—Ä–æ–¥–µ –û–¥–∏–Ω—Ü–æ–≤–æ –ú.–û.
                 –ù–∞ –Ω–∞—à–µ–º —Å–∫–ª–∞–¥–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –º–µ–±–µ–ª—å –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å. –£ –º–Ω–æ–≥–æ –∫–∞–∫ –¥–µ—à–µ–≤–æ–π –±—É –º–µ–±–µ–ª–∏, —Ç–∞–∫ –∏ –º–µ–±–µ–ª—å –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞. 
                 –†–∞–±–æ—Ç–∞–µ–º —É–∂–µ 6 –ª–µ—Ç, —Ä–∞–∑–≤–∏–≤–∞—è—Å—å –∏ —É–ª—É—á—à–∞—è —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä
                 –ú–æ–∂–µ–º —É–∫–æ–º–ø–ª–µ–∫—Ç–æ–≤–∞—Ç—å 100-200 —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç.
                 """]
    add_text = {
        "comp armchair": """
    –í –Ω–∞–ª–∏—á–∏–∏ –±–æ–ª–µ–µ 150 —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –∫—Ä–µ—Å–µ–ª –±—É –¥–ª—è —Ä–∞–±–æ—Ç—ã –¥–æ–º–∞ –∏ –≤ –æ—Ñ–∏—Å–µ.
    –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º, —á—Ç–æ –±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–¥ —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤ –Ω—É–∂–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ.
    """,

        "tables": """
    –£ –Ω–∞—Å –Ω–∞ —Å–∫–ª–∞–¥–µ –∏–º–µ—é—Ç—Å—è —Å—Ç–æ–ª—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã –¥–æ–º–∞ –∏ –≤ –æ—Ñ–∏—Å–µ, —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –≤–∏–¥–æ–≤. 
    –í –Ω–∞–ª–∏—á–∏–∏ –±–æ–ª–µ–µ 300 —Å—Ç–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ —Å–∫–ª–∞–¥–µ –≤ —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–º –≤–∏–¥–µ. 
    –ï—Å—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞–±–µ–ª—å–Ω—ã–µ —Å—Ç–æ–ª—ã –¥–ª—è —ç–ª–∏—Ç–Ω—ã—Ö –æ—Ñ–∏—Å–æ–≤ –¥–æ 15 000 –∏ –ø—Ä–æ—Å—Ç—ã–µ –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ—Ç 999. 
    –ö —Å—Ç–æ–ª–∞–º –º–æ–∂–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç—É–º–±—ã, –∫—Ä–µ—Å–ª–∞ –∏ —à–∫–∞—Ñ—ã.
    """,

        "closet": """
    –®–∏—Ä–æ–∫–∏–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –æ—Ñ–∏—Å–Ω—ã—Ö —à–∫–∞—Ñ–æ–≤ –¥–ª—è –æ–¥–µ–∂–¥—ã –∏ —Å—Ç–µ–ª–ª–∞–∂–µ–π –¥–ª—è –¥–æ–∫—É–º–µ–Ω–µ—Ç–æ–≤, –≤ —Ä–∞–∑–Ω–æ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∏ –¥–µ–∫–æ—Ä–æ–≤. 
    –í—Å–µ —à–∫–∞—Ñ—ã —Å–æ–±—Ä–∞–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –æ—Å–º–æ—Ç—Ä–∞ –∏ –æ—Ü–µ–Ω–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è. 
    –ú–æ–∂–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∫ —à–∫–∞—Ñ—É –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∫—Ä–µ—Å–ª–æ –∏–ª–∏ —Å—Ç—É–ª —Å –ø–∏—Å—å–º–µ–Ω–Ω—ã–º —Å—Ç–æ–ª–æ–º, 
    –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä —Ç—É–º–± –¥–ª—è –æ—Ä–≥—Ç–µ—Ö–Ω–∏–∫–∏, –≤—ã–∫–∞—Ç–Ω—ã—Ö —Ç—É–º–± –Ω–∞ –∫–æ–ª–µ—Å–∏–∫–∞—Ö –∏ –ø—Ä–∏—Å—Ç–∞–≤–Ω—ã—Ö —Ç—É–º–± –∫ —Å—Ç–æ–ª—É.
    –®–∫–∞—Ñ—ã –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ 2499
    –ì–∞—Ä–¥–µ—Ä–æ–±—ã –æ—Ç 4499—Ä
    –®–∫–∞—Ñ—ã —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∏–∑—ä—è–Ω–∞–º–∏ –∏ –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å—Ç–µ–ª–ª–∞–∂–∏ –æ—Ç 2499—Ä
    –ñ–µ–ª–µ–∑–Ω—ã–π —Å –ø–æ–ª–æ—á–∫–∞–º–∏ 9999
    """,

        "cabinet": """
    –û—Ñ–∏—Å–Ω–∞—è —Ç—É–º–±–∞ –Ω–∞ –∫–æ–ª—ë—Å–∏–∫–∞—Ö 
    –£ –Ω–∞—Å –µ—Å—Ç—å –º–Ω–æ–≥–æ —Ç—É–º–±, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–π–¥—É—Ç –æ—Ñ–∏—Å–∞ –∏ –¥–æ–º–∞. –í—Å–µ —Ç—É–º–±—ã –±—É –≤ —Ö–æ—Ä–æ—à–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞ 1999.
    –ù–æ —Ç–∞–∫ –∂–µ –∏–º–µ—é—Ç—Å—è —Ç—É–º–±—ã —Å –∏–∑—ä—è–Ω–∞–º–∏ –∑–∞ 999 —Ä—É–±. 
    –ï—Å—Ç—å –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ —Ç—É–º–±—ã –∏ –∫–∞—Ä—Ç–æ—Ç–µ–∫–∏ –æ—Ç 2999
    """,

        "chairs": """
    –í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ —Å—Ç—É–ª—å—è –¥–ª—è –ª—é–±–æ–π —Ü–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. 
    –£–¥–æ–±–Ω—ã–µ —Å—Ç—É–ª—å—è-–∫—Ä–µ—Å–ª–∞ –¥–ª—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π –∏–ª–∏ –æ–±—ã—á–Ω—ã–µ –∏–∑–æ —Å—Ç—É–ª—å—è –≤ –æ—Ñ–∏—Å, 
    —Ç–∞–∫ –∂–µ –µ—Å—Ç—å —Å—Ç—É–ª—å—è –¥–ª—è –∫—É—Ö–Ω–∏ —Ä–∞–∑–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤, –¥–ª—è –ª—é–±–æ–≥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞. 
    –°–∞–º–∞—è –Ω–∏–∑–∫–∞—è —Ü–µ–Ω–∞ —Å—Ç—É–ª–∞ 799
    """}
    _colors = {"–ë–µ–∂–µ–≤—ã–π": "–ë–µ–∂–µ–≤—ã–π",
               "–ë–µ–ª—ã–π": "–ë–µ–ª—ã–π",
               "–ë–∏—Ä—é–∑–æ–≤—ã–π": "–ë–∏—Ä—é–∑–æ–≤—ã–π",
               "–ì–æ–ª—É–±–æ–π": "–ì–æ–ª—É–±–æ–π",
               "–ñ—ë–ª—Ç—ã–π": "–ñ—ë–ª—Ç—ã–π",
               "–ó–µ–ª—ë–Ω—ã–π": "–ó–µ–ª—ë–Ω—ã–π",
               "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π": "–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π",
               "–ö—Ä–∞—Å–Ω—ã–π": "–ö—Ä–∞—Å–Ω—ã–π",
               "–û—Ä–∞–Ω–∂–µ–≤—ã–π": "–û—Ä–∞–Ω–∂–µ–≤—ã–π",
               "–†–æ–∑–æ–≤—ã–π": "–†–æ–∑–æ–≤—ã–π",
               "–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π": "–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π",
               "–°–µ—Ä—ã–π": "–°–µ—Ä—ã–π",
               "–°–∏–Ω–∏–π": "–°–∏–Ω–∏–π",
               "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π": "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π",
               "–ß—ë—Ä–Ω—ã–π": "–ß—ë—Ä–Ω—ã–π",
               "–†–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–π": "–†–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–π",
               "–î—Ä—É–≥–æ–π": "–î—Ä—É–≥–æ–π",
               }
    _tables_field = {
        'main': [['VideoURL', 'Category', 'AdType', 'Condition', 'Availability'],
                 ['https://youtu.be/ycYx204IpKc?si=5z8-v1fOQP2SdfR_', '–ú–µ–±–µ–ª—å –∏ –∏–Ω—Ç–µ—Ä—å–µ—Ä',
                  '–¢–æ–≤–∞—Ä –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω –Ω–∞ –ø—Ä–æ–¥–∞–∂—É',
                  '–ë/—É', '–í –Ω–∞–ª–∏—á–∏–∏']],
        'cabinet': [['GoodsType', 'GoodsSubType', 'DresserType', 'Material', 'FurnitureAdditions'],
                    ['–®–∫–∞—Ñ—ã, –∫–æ–º–æ–¥—ã –∏ —Å—Ç–µ–ª–ª–∞–∂–∏', '–ö–æ–º–æ–¥—ã –∏ —Ç—É–º–±—ã', '–¢—É–º–±–∞', '–î–°–ü | –ú–µ—Ç–∞–ª–ª', '–ö–æ–ª–µ—Å–∏–∫–∏ | –Ø—â–∏–∫–∏']],
        'chairs': [['GoodsType', 'GoodsSubType', 'SeatMaterial', 'BaseMaterial', 'FurnitureAdditions'],
                   ['–°—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è', '–°—Ç—É–ª—å—è', '–¢–∫–∞–Ω—å | –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–∂–∞', '–î–µ—Ä–µ–≤–æ | –ú–µ—Ç–∞–ª–ª',
                    '–ü–æ–¥–ª–æ–∫–æ—Ç–Ω–∏–∫–∏ | –ö–æ–ª—ë—Å–∏–∫–∏ | –ú—è–≥–∫–æ–µ —Å–∏–¥–µ–Ω–∏–µ | –ú—è–≥–∫–∞—è —Å–ø–∏–Ω–∫–∞']],
        'closet': [['GoodsType', 'GoodsSubType', 'CabinetType', 'Material', 'Purpose'],
                   ['–®–∫–∞—Ñ—ã, –∫–æ–º–æ–¥—ã –∏ —Å—Ç–µ–ª–ª–∞–∂–∏', '–®–∫–∞—Ñ—ã –∏ –±—É—Ñ–µ—Ç—ã', "–®–∫–∞—Ñ", "–ú–î–§ | –ú–µ—Ç–∞–ª–ª | –ü–ª–∞—Å—Ç–∏–∫ | –î–°–ü",
                    '–ö–∞–±–∏–Ω–µ—Ç | –û—Ñ–∏—Å | –ë–∞–ª–∫–æ–Ω | –ü—Ä–∏—Ö–æ–∂–∞—è | –°–ø–∞–ª—å–Ω—è']],
        'comp armchair': [
            ['GoodsType', 'GoodsSubType', 'DeskChairType', 'ComputerChairType', 'UpholsteryMaterial',
             'FurnitureAdditions'],
            ['–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å—Ç–æ–ª—ã –∏ –∫—Ä–µ—Å–ª–∞', '–ö—Ä–µ—Å–ª–∞ –∏ —Å—Ç—É–ª—å—è', '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∫—Ä–µ—Å–ª–∞', '–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ',
             '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–∂–∞ | –¢–∫–∞–Ω—å | –ö–æ–∂–∞ | –ó–∞–º—à–∞ | –°–µ—Ç–∫–∞ | –î–µ—Ä–µ–≤–æ',
             '–ü–æ–¥–ª–æ–∫–æ—Ç–Ω–∏–∫–∏ | –ü–æ–¥–≥–æ–ª–æ–≤–Ω–∏–∫ | –ú–µ—Ö–∞–Ω–∏–∑–º –∫–∞—á–∞–Ω–∏—è | –†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –Ω–∞–∫–ª–æ–Ω–∞ —Å–ø–∏–Ω–∫–∏ | –†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –ø–æ–¥–ª–æ–∫–æ—Ç–Ω–∏–∫–æ–≤ | –†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ –≥–ª—É–±–∏–Ω—ã —Å–∏–¥–µ–Ω—å—è | –ü–æ—è—Å–Ω–∏—á–Ω—ã–π —É–ø–æ—Ä']],
        'tables': [['GoodsType', 'GoodsSubType', 'TableType', 'FurnitureShape', 'FoldingMechanism', 'TabletopMaterial',
                    'BaseMaterial', 'FurnitureAdditions', 'Purpose'],
                   ['–°—Ç–æ–ª—ã –∏ —Å—Ç—É–ª—å—è', '–°—Ç–æ–ª—ã', '–ü–∏—Å—å–º–µ–Ω–Ω—ã–π | –ö—É—Ö–æ–Ω–Ω—ã–π | –ë–∞—Ä–Ω—ã–π | –ñ—É—Ä–Ω–∞–ª—å–Ω—ã–π | –î—Ä—É–≥–æ–π',
                    '–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π | –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π | –ö—Ä—É–≥–ª—ã–π | –ü–æ–ª—É–∫—Ä—É–≥–ª—ã–π | –£–≥–ª–æ–≤–æ–π', '–ù–µ—Ç',
                    '–î–°–ü | –õ–î–°–ü | –°—Ç–µ–∫–ª–æ | –î–µ—Ä–µ–≤–æ', '–î–°–ü | –î–µ—Ä–µ–≤–æ | –ú–µ—Ç–∞–ª–ª', '–¢—É–º–±–∞',
                    '–ë–∞—Ä/–∫–∞—Ñ–µ | –ö–∞–±–∏–Ω–µ—Ç | –ö—É—Ö–Ω—è']]
    }
    __content = CopyContent()

    def __init__(self, choose: str):
        self.choose = choose

    @classmethod
    def __open_xl(cls, name_table: str) -> tuple[pd.DataFrame, str]:
        """
            –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∏ —á—Ç–µ–Ω–∏–µ —Å –Ω–µ–µ –¥–∞–Ω–Ω—ã—Ö –≤ –î–∞—Ç–∞–§—Ä–µ–π–º.

            –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
                name_table = self.choose
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
                DataFrame - –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –¥–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
                name - –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ–π —Ç–∞–±–ª–∏—Ü—ã:
                    –¥–ª—è –î–∏—Ä–µ–∫—Ç–æ—Ä—Å–∫–æ–π, —É–≥–ª–æ–≤—ã—Ö –∏ –ø—Ä—è–º—ã—Ö —Å—Ç–æ–ª–æ–≤ - tables
                    –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö self.choose
        """
        match name_table:
            case "director office" | "corner tables" | "straight tables":
                xl = pd.read_excel(f"{cls.__cwd}/data_xl/tables.xlsx")
                data_f, name = pd.DataFrame(xl), 'tables'
            case _:
                xl = pd.read_excel(f"{cls.__cwd}/data_xl/{name_table}.xlsx")
                data_f, name = pd.DataFrame(xl), name_table
        return data_f, name

    @classmethod
    def __read_js(cls):
        """
            –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª —Å –∑–∞–ø–∞—Ä—Å–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –∏—Ö
        """
        try:
            with open(f"{cls.__cwd}/data_xl/captions", "r") as f:
                cont = load(f)
                return cont
        except FileNotFoundError:
            return "This file doesn`t exist"

    @classmethod
    def __set_color(cls, pars: str) -> tuple[str, str]:
        """
            –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç - caption –∫–∞—Ä—Ç–∏–Ω–∫–∏
            –ù–∞—Ö–æ–¥–∏—Ç –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ç–æ–≤–∞—Ä–∞.

            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
                parent_color - –¶–≤–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ —Ç–µ–∫—Å—Ç–µ
                color - –¶–≤–µ—Ç –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Ü–≤–µ—Ç–æ–≤
        """
        parent_color = findall(r'–¶–≤–µ—Ç[: ]?([\w ]*)', pars) or [choice(["–î—Ä—É–≥–æ–π", "–†–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–π"])]
        parent_color = parent_color[0].title()
        color = cls._colors[parent_color] if parent_color in cls._colors.keys() else cls._colors[
            choice(["–î—Ä—É–≥–æ–π", "–†–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–π"])]
        return parent_color, color

    @classmethod
    def __load_size_data(cls, frame: pd.DataFrame, pars: dict, key: list, ind: int) -> pd.DataFrame:
        """
            –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ü–≤–µ—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—ã cabinet –∏ closet
            –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
                frame - –î–∞—Ç–∞–§—Ä–µ–π–º, —Ç–∞–±–ª–∏—Ü–∞
                pars - —Å–ª–æ–≤–∞—Ä—å —Å captions, —Ç–µ–∫—Å—Ç-–æ–ø–∏—Å–∞–Ω–∏–µ
                key - –∫–ª—é—á–∏ –∫ pars
                ind - –∏–Ω–¥–µ–∫—Å, —Å—Ç—Ä–æ—á–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∏–¥–µ—Ç –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
                –î–∞—Ç–∞–§—Ä–µ–π–º
        """
        index = ind

        for i in key:
            width, depth, height = findall(r'(\d{2,3})[—Öx/\\](\d{2,3})[—Öx/\\](\d{2,3})', pars[i])[0]
            parent_color, color = cls.__set_color(pars[i])
            frame.loc[index, ['Width', 'Height', 'Depth', 'Color', 'ColorName']] = [int(width), int(height), int(depth),
                                                                                    color, parent_color]
            index += 1

        return frame

    @classmethod
    def __load_armchair_size_data(cls, frame: pd.DataFrame, pars: dict, key: list, ind: int) -> pd.DataFrame:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ü–≤–µ—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É comp armchair
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
            frame - –î–∞—Ç–∞–§—Ä–µ–π–º, —Ç–∞–±–ª–∏—Ü–∞
            pars - —Å–ª–æ–≤–∞—Ä—å —Å captions, —Ç–µ–∫—Å—Ç-–æ–ø–∏—Å–∞–Ω–∏–µ
            key - –∫–ª—é—á–∏ –∫ pars
            ind - –∏–Ω–¥–µ–∫—Å, —Å—Ç—Ä–æ—á–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∏–¥–µ—Ç –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            –î–∞—Ç–∞–§—Ä–µ–π–º
        """
        index = ind
        for i in key:
            try:
                sizes = findall(r'(\d{2,3})[—Öx/\\](\d{2,3})', pars[i])
                width, depth = sizes[0]
                maxh, minh = sizes[1]
                color = cls.__set_color(pars[i])[0]
                frame.loc[index, ['Width', 'Depth', 'MaxHeight', 'MinHeight', 'Color']] = [width, depth, maxh, minh,
                                                                                           color]

            except IndexError:
                pass
            else:
                width, depth, maxh, minh = 48, 50, 45, 57
                color = cls.__set_color(pars[i])[0]
                frame.loc[index, ['Width', 'Depth', 'MaxHeight', 'MinHeight', 'Color']] = [width, depth, maxh, minh,
                                                                                           color]

        return frame

    @classmethod
    def __load_tables_size(cls, frame: pd.DataFrame, pars: dict, key: list, ind: int) -> pd.DataFrame:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ü–≤–µ—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É comp armchair
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
            frame - –î–∞—Ç–∞–§—Ä–µ–π–º, —Ç–∞–±–ª–∏—Ü–∞
            pars - —Å–ª–æ–≤–∞—Ä—å —Å captions, —Ç–µ–∫—Å—Ç-–æ–ø–∏—Å–∞–Ω–∏–µ
            key - –∫–ª—é—á–∏ –∫ pars
            ind - –∏–Ω–¥–µ–∫—Å, —Å—Ç—Ä–æ—á–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∏–¥–µ—Ç –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            –î–∞—Ç–∞–§—Ä–µ–π–º
        """
        index = ind
        for i in key:
            length, width, height = findall(r'(\d{2,3})[—Öx/\\](\d{2,3})[—Öx/\\](\d{2,3})', pars[i])[0]
            parent_color, color = cls.__set_color(pars[i])
            frame.loc[index, ['Width', 'Height', 'Length', 'Color', 'ColorName']] = [int(width), int(height),
                                                                                     int(length),
                                                                                     color, parent_color]
            index += 1

        return frame

    @classmethod
    def __load_chairs_color(cls, frame: pd.DataFrame, pars: dict, key: list, ind: int) -> pd.DataFrame:
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É comp chairs
        –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
            frame - –î–∞—Ç–∞–§—Ä–µ–π–º, —Ç–∞–±–ª–∏—Ü–∞
            pars - —Å–ª–æ–≤–∞—Ä—å —Å captions, —Ç–µ–∫—Å—Ç-–æ–ø–∏—Å–∞–Ω–∏–µ
            key - –∫–ª—é—á–∏ –∫ pars
            ind - –∏–Ω–¥–µ–∫—Å, —Å—Ç—Ä–æ—á–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –∏–¥–µ—Ç –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            –î–∞—Ç–∞–§—Ä–µ–π–º
        """
        index = ind
        for i in key:
            parent_color, color = cls.__set_color(pars[i])
            frame.loc[index, ['Color', 'ColorName']] = [color, parent_color]
            index += 1

        return frame

    @classmethod
    def __end_program(cls) -> None:
        """
            –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã - —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω—ã—Ö —Ñ–æ—Ç–æ
        """
        pat = f"{cls.__cwd}/data_xl/photo"
        files = scandir(pat)
        for i in files:
            remove(i)

    @classmethod
    def __load_standard_data(cls, name: str) -> tuple[pd.DataFrame, int, str, list]:
        """
            –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É –∏ –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Ü–≤–µ—Ç–∞
            –ü—Ä–∏–Ω–∏–º–∞–µ—Ç:
                name - self.choose
            –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
                fr - dataFrame
                ind - –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏ —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å
                table - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
                key - –∫–ª—é—á–∏ –æ—Ç captions
        """
        pars_data = cls.__read_js()
        fr, table = cls.__open_xl(name)
        key = list(pars_data.keys())
        ind = len(fr.index)
        field = ['Title', 'Description', 'Price', 'ImageUrls']
        field.extend(cls._tables_field['main'][0])
        field.extend(cls._tables_field[table][0])

        for i in key:
            title = search(r"(.*)", pars_data[i]).group()
            description = pars_data[i] + "\n" + (
                cls.add_text[name] if name in cls.add_text else cls.add_text['tables']) + "\n" + choice(cls.main_text)
            price = findall(r"–¶–µ–Ω–∞[: ]?([\d ]*)", pars_data[i]) or ['']
            image_url = asc_url(cls.__cwd, i)

            lst = [title, description, int(price[0].replace(' ', '')), image_url]
            lst.extend(cls._tables_field['main'][1])
            lst.extend(cls._tables_field[table][1])

            fr.loc[len(fr.index), field] = lst

        match table:
            case "cabinet" | "closet":
                cls.__load_size_data(fr, pars_data, key, ind)
            case "tables":
                cls.__load_tables_size(fr, pars_data, key, ind)
            case "comp armchair":
                cls.__load_armchair_size_data(fr, pars_data, key, ind)
            case "chairs":
                cls.__load_chairs_color(fr, pars_data, key, ind)
        return fr, ind, table, key

    @classmethod
    def __load_data_xl(cls, name: str) -> None:
        """
            –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü—É
            –ü—Ä–∏–Ω–∏–º–∞–µ—Ç
                name - self.choose
        """
        frame, index, table, key = cls.__load_standard_data(name)
        writer = pd.ExcelWriter(f"{cls.__cwd}/data_xl/{table}.xlsx", engine="xlsxwriter")

        frame.to_excel(writer, index=False)
        worksheet = writer.sheets['Sheet1']

        for i in key:
            worksheet.insert_image("P" + str(index + 2), f'{cls.__cwd}/data_xl/photo/{i}.jpeg',
                                   {"x_scale": 0.1, "y_scale": 0.1})
            index += 1

        writer._save()

    def table_for_avito(self):
        fr, table = self.__open_xl(self.choose)
        index = fr["Id"].isnull().sum()
        start_id = len(fr.index) - index
        ides = set_id(index)
        address, file = set_address(index)

        for i in range(index):
            fr.loc[start_id, ["Id", "Address"]] = [ides[i], address[i]]
            start_id += 1

        fr.to_excel(file, index=False)

    def start_pars(self, count_mass: int):
        """
            –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞
            –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ —Ñ–∞–π–ª
            –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —ç–∫—Å–µ–ª—å —Ç–∞–±–ª–∏—Ü—É
            –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ
        """
        uvloop.install()
        asyncio.run(self.__content.copy_content(self._channels[self.choose], count_mass))
        self.__content.dump_data()
        self.__load_data_xl(self.choose)
        self.__end_program()


if __name__ == "__main__":
    x = LoadData("chairs")
    # # x.start_pars(8)
    # x.table_for_avito()
